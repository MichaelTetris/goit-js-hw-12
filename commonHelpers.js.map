{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_KEY = '43418044-448fc0127227a847b3808d395';\nconst url = 'https://pixabay.com/api/';\n\nexport async function searchImages(stringSearch, myGallery) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: stringSearch,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: 15,\n    page,\n  });\n\n  try {\n    const {data,status} = await axios.get(`${url}?${params}`);\n\n    if (status !== 200) {\n      throw new Error(status);\n    }\n\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch images');\n  }\n};\n","export function renderGallery(receivedObject) {\n  const neccesaryArray = receivedObject.hits;\n  return neccesaryArray\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n        <li class=\"card\">\n            <div class=\"place-for-image\">\n                <a href=\"${largeImageURL}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"picture\"/>\n                </a>\n            </div>\n            <div class=\"info-text\">\n                <div class=\"description\">\n                    <span class=\"bold-text\">Likes</span>\n                    <span class=\"info-value\">${likes}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Views</span>\n                    <span class=\"info-value\">${views}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Comments</span>\n                    <span class=\"info-value\">${comments}</span>\n                </div>\n                <div class=\"description\">\n                    <span class=\"bold-text\">Downloads</span>\n                    <span class=\"info-value\">${downloads}</span>\n                </div>\n            </div>\n        </li>`\n    )\n    .join('');\n}\n","import { searchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-function.js';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.search-form');\nconst loader = document.querySelector('.loader');\n/* const loadMoreBtn = document.querySelector('.load-more-btn');\nconsole.log(loadMoreBtn); */\n\nconst gallery = document.querySelector('.list_gallery');\nconst lightbox = new SimpleLightbox('.card .place-for-image a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nform.addEventListener('submit', handleSearch);\n\nfunction handleSearch(event) {\n  event.preventDefault();\n  gallery.innerHTML = '';\n  loader.style.display = 'inline-block';\n  const searchWord = event.currentTarget.elements.inputElement.value;\n  searchImages(searchWord, loader, gallery)\n    .then(data => {\n      if (data.total == 0) {\n        iziToast.show({\n          title: 'Ops.',\n          titleColor: 'white',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          messageColor: 'white',\n          color: 'red',\n          position: 'topRight',\n          timeout: '5000',\n        });\n        event.target.reset();\n        return 0;\n      } else {\n        gallery.insertAdjacentHTML('beforeend', renderGallery(data));\n        lightbox.refresh();\n        event.target.reset();\n      }\n    })\n    .catch(error => {\n      iziToast.show({\n        title: 'Ops.',\n        titleColor: 'white',\n        message: error,\n        messageColor: 'white',\n        color: 'red',\n        position: 'topCenter',\n        timeout: '5000',\n      });\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n    });\n}\n"],"names":["API_KEY","url","searchImages","stringSearch","myGallery","params","data","status","axios","renderGallery","receivedObject","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","loader","gallery","lightbox","SimpleLightbox","handleSearch","event","searchWord","iziToast","error"],"mappings":"owBAGA,MAAMA,EAAU,qCACVC,EAAM,2BAEL,eAAeC,EAAaC,EAAcC,EAAW,CAC1D,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKL,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,GACV,IACJ,CAAG,EAED,GAAI,CACF,KAAM,CAAC,KAAAG,EAAK,OAAAC,CAAM,EAAI,MAAMC,EAAM,IAAI,GAAGP,CAAG,IAAII,CAAM,EAAE,EAExD,GAAIE,IAAW,IACb,MAAM,IAAI,MAAMA,CAAM,EAGxB,OAAOD,CACR,MAAe,CACd,MAAM,IAAI,MAAM,wBAAwB,CACzC,CACH,CC5BO,SAASG,EAAcC,EAAgB,CAE5C,OADuBA,EAAe,KAEnC,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA;AAAA,2BAGeL,CAAa;AAAA,gCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAMXC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,+CAIRC,CAAS;AAAA;AAAA;AAAA,cAInD,EACA,KAAK,EAAE,CACZ,CC/BA,MAAMC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,SAAS,EAIzCC,EAAU,SAAS,cAAc,eAAe,EAChDC,EAAW,IAAIC,EAAe,2BAA4B,CAC9D,aAAc,MACd,aAAc,GAChB,CAAC,EAEDJ,EAAK,iBAAiB,SAAUK,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpBJ,EAAQ,UAAY,GACpBD,EAAO,MAAM,QAAU,eACvB,MAAMM,EAAaD,EAAM,cAAc,SAAS,aAAa,MAC7DtB,EAAauB,CAA2B,EACrC,KAAKnB,GAAQ,CACZ,GAAIA,EAAK,OAAS,EAChB,OAAAoB,EAAS,KAAK,CACZ,MAAO,OACP,WAAY,QACZ,QACE,2EACF,aAAc,QACd,MAAO,MACP,SAAU,WACV,QAAS,MACnB,CAAS,EACDF,EAAM,OAAO,QACN,EAEPJ,EAAQ,mBAAmB,YAAaX,EAAcH,CAAI,CAAC,EAC3De,EAAS,QAAO,EAChBG,EAAM,OAAO,OAErB,CAAK,EACA,MAAMG,GAAS,CACdD,EAAS,KAAK,CACZ,MAAO,OACP,WAAY,QACZ,QAASC,EACT,aAAc,QACd,MAAO,MACP,SAAU,YACV,QAAS,MACjB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CACbR,EAAO,MAAM,QAAU,MAC7B,CAAK,CACL"}